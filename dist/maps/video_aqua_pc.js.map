{"version":3,"sources":["video_aqua_pc.js"],"names":["window","requirejs","playerContainer","Timer","course_id","course_list_id","type","url","data","console","msg","done","res","success","error","href","location","nextUrl","showPlayBtn","btnPlayNext","removeClass","btnReplayVideo","addClass","deleteVideoLog","deleteSessionLog","params","then","response","axios","delete","training_user_id","catch","aquaPlayer","$","parent","waitMessage","timer","autoplay","osName","Util","getOSName","attr","aquaHtml5","aquaWindow","options","watermark","fileUrl","callback","player","AquaPlayerService","log","setTimeout","startValues","countdown","getTimeValues","toString","html","e","addEventListener","alert","all","spread","acct","perms","btnPlayVideo","sessionProgressStartLogger","on","AquaNManagerService","startPlayer","click","event","preventDefault","stop","sessionProgressEndLogger"],"mappings":"YAAAA,QAAOC,WAAPD,SAQE,oBACA,YACA,eAEA,SAAIE,EAAAA,EAAoBC,GAqFlBC,QAAAA,KACAC,EAAAA,MAHIC,KAAA,OAHRC,IAAA,yBASEC,MACEC,iBAAkBC,EAAlBF,KAAA,oBACDJ,UAAAF,EAAAM,KAAA,aAXHH,eAAAH,EAAAM,KAAA,qBAQGG,KAAK,SAAUC,GAOpBA,EAAAC,SALMJ,QAAQK,MAAMF,EAAIF,OAwBlBN,QAAAA,KACAC,EAAAA,MAHIC,KAAA,OAHRC,IAAA,uBASEC,MACEC,iBAAkBC,EAAlBF,KAAA,oBADFJ,UAEOF,EAAAM,KAAA,aACLR,eAAgBe,EAAhBP,KAAA,qBAZJG,KAAA,SAAAC,GAeDA,EAAAC,QAHKb,OAAOgB,SAASD,KAAOE,EAFvBR,QAAQK,MAAMF,EAAIF,OAUxB,QAASQ,KAOT,SAAAhB,EAAAM,KAAA,YALIW,EAAYC,YAAY,SACxBC,EAAeC,SAAS,UAkD5B,QAAAC,KACA,MAASC,GAAAA,OAAAA,cACPC,QACEA,SAAQvB,EAAAM,KAAA,SAAAkB,KAAA,SAAAC,MAQRlB,MAAAA,SAAcK,GAThBL,QAAAK,MAAAA,KADF,QAASU,KACP,MAAOI,GAAMC,OAAO,gBAClBJ,QACEK,iBAAkB5B,EAAgBM,KAAK,oBACvCH,eAAgBH,EAAgBM,KAAK,qBAGxCkB,KAAK,SAAUC,MAEfI,MAAM,SAAUjB,GACfL,QAAQK,MAAMA,KA/LlB,GAcEkB,GAdEb,EAAAA,GAAAA,OAAgBc,EAChBhB,EAAAA,GAAUE,OAAYe,MAEtBC,EAAgBF,EAAA,gBAChBG,EAAYjC,EAAJ,mBACRkC,EAAWnC,EAAAA,kBACXoC,EAASC,EAAKC,SAAlBC,KAAA,QACIC,EAAcT,EAAA,qBACdU,EAAaV,EAAE,sBACfD,EAAAA,GAAJ7B,GAJIkC,EAAWnC,EAAgBM,KAAK,YAMpC8B,EAAAC,EAAAC,YACAE,EAAAT,EAAA,eAJIU,EAAaV,EAAE,cAWhBA,GAAA,WAJc,YAAXK,EAMJI,EAAIE,OAEFC,EAAWZ,MAGTxB,IAAAA,IACDqC,QAAAb,EAAA,UAAAzB,KAAA,OANHqC,UAAAZ,EAAA,UAAAzB,KAAA,aAGEuC,SAAU,SAAUC,GAMtBC,EAAAA,EAJIxC,QAAQyC,IAAIlB,IASdmB,GAAW,GAAAF,GAAYL,GAESQ,MAA9BhB,EAAaiB,KAAAA,aAJfpB,EAAE,UAAUb,YAAY,SAExB+B,WAAW,WAOPhB,EAAAA,OAAAA,WAAiBC,EAAMkB,aAAgBC,QAAtB,MAHnBpB,EAAYqB,KAAKpB,EAAMkB,gBAAgBC,WAAa,+BAOlDpB,EAAAA,iBAAiB,iBAAjB,SAAAsB,GAJAtB,EAAYqB,KAAKpB,EAAMkB,gBAAgBC,WAAa,iCAGtDnB,EAAMsB,iBAAiB,iBAAkB,SAAUD,GAM/C7B,EAAU4B,KAAEjC,iBAGX4B,WAHD,WAHFnD,OAAA2D,MAAA,yDASD/B,EAtBHgC,KAAArC,IAAAC,MAuBDE,KAAAE,EAAAiC,OAAA,SAAAC,EAAAC,GACD7C,OAAAA,SAAAA,aAEQgC,QAERc,MAEEC,IAEDxD,QAJDyC,IAAAZ,GAMA0B,EAAAE,GAAc,QAAA,WACZF,EAAAA,OACDC,IAzDHE,oBAAAC,gBAuDM/B,GACF2B,EAAaK,UA0BjBlD,EAAY+C,GAAG,QAAS,SAAUI,GAOlCA,EAAAC,iBALEnC,EAAMoC,OAQRC","file":"../javascripts/video_aqua_pc.js","sourcesContent":["window.requirejs(\n  [\n    'common',\n    'aquaPlayerService',\n    'easyTimer',\n    'jqueryTimer'\n  ],\nfunction (Util, AquaPlayerService, Timer) {\n  // element cache1\n  var $ = $ || window.$;\n  var axios = axios || window.axios;\n\n  var playerContainer = $('.videoplayer');\n  var btnPlayVideo = $('#btn_play_video');\n  var btnPlayNext = $('#btn_play_next');\n  var nextUrl = btnPlayNext.parent().attr('href');\n  var btnReplayVideo = $('#btn_replay_video');\n  var waitMessage = $('#countdown .values'); // $('.wait-message');\n  var timer = new Timer();\n  var autoplay = playerContainer.data('autoplay'); // 보안플레이어 자동 실행\n  var osName = Util.getOSName();\n  var aquaHtml5 = $('#aqua_html5');\n  var aquaWindow = $('#aqua_html5');\n  var aquaPlayer;\n\n  // var timerWait = null; // 비디오 시청 종료 후 다음 버튼을 누르도록 강요하는 타이머\n  // var timerWaitingSeconds = playerContainer.data('wait-seconds'); // 다음버튼을 노출하는데 까지 대기하는 시간\n\n  $(function () {\n    if (osName === 'Windows') {\n      aquaHtml5.show();\n    } else {\n      aquaWindow.show();\n    }\n\n    var options = {\n      fileUrl: $('#video').data('url'),\n      watermark: $('#video').data('watermark'),\n      callback: function (player) {\n        aquaPlayer = player;\n        console.log(aquaPlayer);\n      }\n    };\n\n    AquaPlayerService = new AquaPlayerService(options);\n\n    if (playerContainer.data('confirm') === '1') {\n      $('.timer').removeClass('blind');\n\n      setTimeout(function () {\n        // timerWait = $.timer(1000 * 1, waitingTimeLogger, true);\n        timer.start({countdown: true, startValues: {seconds: 30}});\n\n        waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n\n        timer.addEventListener('secondsUpdated', function (e) {\n          waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n        });\n\n        timer.addEventListener('targetAchieved', function (e) {\n          waitMessage.html('학습 초기화 중입니다..');\n\n          setTimeout(function () {\n            window.alert('30초 동안 다음 버튼을 누르지 않아 학습을 초기화 하였습니다.\\n\\n재시청 해주시기 바랍니다.');\n\n            axios.all([ deleteVideoLog(), deleteSessionLog() ])\n            .then(axios.spread(function (acct, perms) {\n              window.location.reload();\n            }));\n          }, 3000);\n        });\n      }, 1000);\n    }\n    showPlayBtn();\n\n    console.log(osName);\n\n    btnPlayVideo.on('click', function () {\n      timer.stop();\n      sessionProgressStartLogger();\n      AquaNManagerService.startPlayer();\n    });\n\n    if (autoplay) {\n      btnPlayVideo.click();\n    }\n  });\n\n  /**\n   * 세션 시작일시 로깅\n   */\n  function sessionProgressStartLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/starttime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      }\n    });\n  }\n\n  /**\n  * 다음버튼 클릭 시 발생 이벤트\n  */\n  btnPlayNext.on('click', function (event) {\n    event.preventDefault();\n    timer.stop();\n    // 세션 종료로그를 기록한다.\n    sessionProgressEndLogger();\n  });\n\n  /**\n   * 세션 종료일시 로깅\n   */\n  function sessionProgressEndLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/endtime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n        window.location.href = nextUrl;\n      }\n    });\n  }\n\n  /**\n   * 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n   */\n  function showPlayBtn () {\n    if (playerContainer.data('status') === 'done') {\n      btnPlayNext.removeClass('blind');\n      btnReplayVideo.addClass('blind');\n    }\n  }\n\n  /**\n   * 정해진 시간 내에 다음 버튼을 누르지 않을 경우\n   * 학습을 초기화 하는 타이머 컨트롤러\n   */\n  function waitingTimeLogger () {\n    waitMessage.html(' ( ' + timerWaitingSeconds + ' 초 이내 클릭 )');\n\n    // 세션과 비디오 로그를 삭제한다.\n    if (timerWaitingSeconds <= 0) {\n      timerWait.stop();\n      window.alert('비디오를 재시청 해주시기 바랍니다.');\n\n      axios.all([ deleteVideoLog(), deleteSessionLog() ])\n        .then(axios.spread(function (acct, perms) {\n          console.log(acct);\n          // if (acct.data.success) {\n          var redirectUrl = '/session' +\n              '/' + playerContainer.data('training-user-id') +\n              '/' + playerContainer.data('course-id') +\n              '/' + playerContainer.data('course-list-id');\n\n          console.log(redirectUrl);\n          window.location.href = redirectUrl;\n          // }\n        }));\n    }\n\n    timerWaitingSeconds -= 1;\n  }\n\n  /**\n   * 세션 비디오 로그를 삭제한다.\n   */\n  function deleteVideoLog () {\n    return axios.delete('/video/log', {\n      params: {\n        video_id: playerContainer.data('id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 세션 로그를 삭제한다.\n  function deleteSessionLog () {\n    return axios.delete('/session/log', {\n      params: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n});\n"]}