{"version":3,"sources":["video_aqua_pc.js"],"names":["window","requirejs","Util","AquaPlayerService","Timer","templateHTML5","templateWindow","player","bindEvent","setVolume","console","info","ec","msg","error","videoLastPlayedTime","videoDuration","state","setCurrentPlaybackTime","getDuration","setPlayer","confirm","OpenState","Closed","NPlayer","timerLog","reset","timerLoggingInterval","PlayState","Playing","sessionProgressStartLogger","Stopped","Paused","videoEndTimeLogger","pause","showPlayBtn","videoTotalPlayedSeconds","sessionHasEnded","waitMessage","$","removeClass","secondTimer","start","countdown","startValues","seconds","addEventListener","getTimeValues","toString","e","setTimeout","html","axios","all","deleteVideoLog","deleteSessionLog","then","location","alert","spread","res1","res2","reload","timer","videoPlayTimeLogger","stop","checkVideoDuration","btnReplayVideo","timerLogPlayedSeconds","getCurrentPlaybackTime","videoCurrentTime","url","ajax","type","video_id","videoId","video_duration","currenttime","data","training_user_id","trainingUserId","played_seconds","done","res","success","total_played_seconds","catch","playerContainer","course_list_id","btnPlayNext","hasEnded","sessionProgressEndLogger","href","course_id","nextUrl","Math","floor","passiveRate","delete","params","preventDefault","addClass","response","parent","attr","video_url","watermark","content","osName","append","options","Handlebars","compile","callback","fileUrl","obj","initPlayer","on","event","play"],"mappings":"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","file":"../javascripts/video_aqua_pc.js","sourcesContent":["window.requirejs(\n  [\n    'common',\n    'aquaPlayerService',\n    'easyTimer',\n    'text!/win_aquaplayer_html5.html',\n    'text!/win_aquaplayer_window.html',\n    'jqueryTimer'\n  ],\nfunction (Util, AquaPlayerService, Timer, templateHTML5, templateWindow) {\n  var $ = $ || window.$;\n  var axios = axios || window.axios;\n  var osName = Util.getOSName();\n\n  var player = null;\n  var playerContainer = $('.videoplayer');\n  // var aquaHtml5 = $('#aqua-html5');\n  // var aquaWindow = $('#aqua-window');\n  var btnPlayNext = $('#btn_play_next');\n  var btnReplayVideo = $('#btn_replay_video');\n\n  var timerLoggingInterval = playerContainer.data('interval'); // log every 5 seconds\n  var timerLog = null;\n  var timerLogPlayedSeconds = 0; // 시청시간(초)\n  var secondTimer = new Timer();\n\n  var waitMessage = $('#countdown .values'); // $('.wait-message');\n  var passiveRate = playerContainer.data('passive-rate'); // 다음 버튼을 노출하는 시점\n  var sessionHasEnded = false;\n  var nextUrl = btnPlayNext.parent().attr('href');\n  var videoDuration = null; // 비디오 러닝타임\n  var videoCurrentTime; // 비디오 현재 시청시간\n  var videoId = playerContainer.data('id'); // video 테이블의 id\n  var videoTotalPlayedSeconds = playerContainer.data('total-play'); // 비디오 총 시청시간\n  var videoLastPlayedTime = playerContainer.data('current-time'); // 마지막 재생시점\n  var trainingUserId = btnPlayNext.data('training-user-id');\n\n  $(function () {\n    var data = {\n      video_url: playerContainer.data('video-url'),\n      watermark: playerContainer.data('watermark')\n    };\n\n    // console.log(playerContainer.data('watermark'));\n\n    // console.log(data);\n    var content;\n\n    if (osName === 'Windows') {\n      content = window.Handlebars.compile(templateWindow);\n    } else {\n      content = window.Handlebars.compile(templateHTML5);\n    }\n\n    // console.log(content(data));\n\n    $('#aqua-player').append(content(data));\n\n    var options = {\n      // fileUrl: $('#video').data('url'),\n      // watermark: $('#video').data('watermark'),\n      fileUrl: data.video_url,\n      watermark: data.watermark,\n      callback: function (obj) {\n        if (obj) {\n          player = obj;\n          initPlayer();\n        }\n      }\n    };\n    AquaPlayerService = new AquaPlayerService(options);\n  });\n\n  function initPlayer () {\n    player.setVolume(0.5);\n\n    player.bindEvent('Error', function (ec, msg) {\n      console.error(msg);\n    });\n\n    player.bindEvent('OpenStateChanged', function (state) {\n      switch (state) {\n      case window.NPlayer.OpenState.Opened:\n        console.info('player: playing');\n\n        videoDuration = player.getDuration();\n\n        if (videoLastPlayedTime < videoDuration - 5) {\n          if (window.confirm('마지막 재생시점으로 이동하시겠습니까?')) {\n            player.setCurrentPlaybackTime(videoLastPlayedTime);\n            // player.pause();\n          }\n        }\n\n        setPlayer();\n        break;\n\n      case window.NPlayer.OpenState.Closed:\n        console.log('closed');\n        break;\n      }\n    });\n\n    player.bindEvent('PlayStateChanged', function (state) {\n      switch (state) {\n      case window.NPlayer.PlayState.Playing:\n        // 세션시작로그\n        sessionProgressStartLogger();\n\n        // 로깅 시간간격 설정\n        timerLog.reset(1000 * timerLoggingInterval);\n        break;\n\n      case window.NPlayer.PlayState.Stopped: // 정지\n      case window.NPlayer.PlayState.Paused:  // 일시정지\n        console.info('player: stop/pause');\n\n        // 로깅 일시정지\n        timerLog.pause();\n\n        // 비디오 시청 종료일시 기록\n        videoEndTimeLogger();\n        break;\n      }\n    });\n\n    player.bindEvent('PlaybackCompleted', function () {\n      console.info('player: ended');\n\n      // 로깅 일시정지\n      timerLog.pause();\n\n      // 총 시청시간에 따라 다음 버튼 표시\n      showPlayBtn(videoTotalPlayedSeconds + timerLoggingInterval);\n\n      // 비디오 시청 종료일시 기록\n      videoEndTimeLogger();\n\n      // 세션 종료 시 대기 타이머 시작\n      if (!sessionHasEnded) {\n        setTimeout(function () {\n          $('.timer').removeClass('blind');\n\n          console.log('second timer started');\n          secondTimer.start({countdown: true, startValues: {seconds: 30}});\n\n          waitMessage.html(secondTimer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n\n          secondTimer.addEventListener('secondsUpdated', function (e) {\n            waitMessage.html(secondTimer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n          });\n\n          secondTimer.addEventListener('targetAchieved', function (e) {\n            waitMessage.html('학습 초기화 중입니다..');\n\n            setTimeout(function () {\n              window.alert('30초 동안 다음 버튼을 누르지 않아 학습을 초기화 하였습니다.\\n\\n재시청 해주시기 바랍니다.');\n\n              axios.all([ deleteVideoLog(), deleteSessionLog() ])\n              .then(axios.spread(function (res1, res2) {\n                window.location.reload();\n              }));\n            }, 3000);\n          });\n        }, 1000);\n      }\n    });\n  }\n\n  /**\n   * Player 를 셋팅한다.\n   */\n  function setPlayer () {\n    if (videoDuration) {\n      timerLog = $.timer(1000 * timerLoggingInterval, videoPlayTimeLogger, true);\n      timerLog.stop();\n      checkVideoDuration();\n    } else {\n      console.error('을 확인할 수 없습니다.');\n    }\n  }\n\n  /**\n   * 비디오 재생시간이 존재하는지 여부 체크\n   */\n  function checkVideoDuration () {\n    // 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n    showPlayBtn(videoTotalPlayedSeconds);\n  }\n\n    /**\n   * 시청시간 로깅\n   */\n  function videoPlayTimeLogger () {\n    console.log('video played time logging...');\n    timerLogPlayedSeconds += timerLoggingInterval;\n\n    var seconds = player.getCurrentPlaybackTime();\n\n    if ((videoCurrentTime > 0) && videoCurrentTime === seconds) {\n      player.pause();\n      btnReplayVideo.removeClass('blind');\n      return;\n    }\n\n    videoCurrentTime = seconds;\n\n    $.ajax({\n      type: 'POST',\n      url: '/video/log/playtime',\n      data: {\n        training_user_id: trainingUserId,\n        video_id: videoId,\n        played_seconds: timerLogPlayedSeconds,\n        video_duration: videoDuration,\n        currenttime: seconds\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n\n        // 오류 발생 시 타이머와 비디오 재생을 멈춘다.\n        player.pause().then(function () {\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } else {\n        timerLogPlayedSeconds = 0;\n        // 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n        videoTotalPlayedSeconds = res.total_played_seconds;\n        showPlayBtn(videoTotalPlayedSeconds);\n      }\n    });\n  }\n\n  /**\n   * 비디오 시청 종료시간 로깅\n   */\n  function videoEndTimeLogger () {\n    console.log('video log end');\n    $.ajax({\n      type: 'POST',\n      url: '/video/log/endtime',\n      data: {\n        video_id: videoId\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n      // console.info('종료시간 기록!');\n      }\n    });\n  }\n\n  /**\n   * 세션 시작일시 로깅\n   */\n  function sessionProgressStartLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/starttime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n        // 오류 발생 시 타이머와 비디오 재생을 멈춘다.\n        timerLog.stop();\n        player.stop();\n      } else {\n        sessionHasEnded = res.hasEnded; // 세션 종료여부\n      }\n    });\n  }\n\n/**\n * 다음버튼 클릭 시 발생 이벤트\n */\n  btnPlayNext.on('click', function (event) {\n    event.preventDefault();\n    secondTimer.stop();\n    // 세션 종료로그를 기록한다.\n    sessionProgressEndLogger();\n  });\n\n  /**\n   * 세션 종료일시 로깅\n   */\n  function sessionProgressEndLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/endtime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n        window.location.href = nextUrl;\n      }\n    });\n  }\n\n  /**\n   * 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n   */\n  function showPlayBtn () {\n    if (Math.floor(videoDuration * (passiveRate / 100)) <= videoTotalPlayedSeconds) {\n      btnPlayNext.removeClass('blind');\n      btnReplayVideo.addClass('blind');\n    }\n  }\n\n  /**\n   * 세션 비디오 로그를 삭제한다.\n   */\n  function deleteVideoLog () {\n    return axios.delete('/video/log', {\n      params: {\n        video_id: playerContainer.data('id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 세션 로그를 삭제한다.\n  function deleteSessionLog () {\n    return axios.delete('/session/log', {\n      params: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  btnReplayVideo.on('click', function (e) {\n    e.preventDefault();\n\n    player.play();\n    btnReplayVideo.addClass('blind');\n  });\n});\n"]}