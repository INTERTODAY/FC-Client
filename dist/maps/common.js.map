{"version":3,"sources":["common.js"],"names":["window","define","require","$","axios","getAllUrlParams","polyfill","url","obj","split","location","search","slice","queryString","arr","i","length","paramNum","paramName","a","replace","v","toLowerCase","paramValue","push","getOSName","navigator","appVersion","indexOf","OSName"],"mappings":"AAAA,YACAA,QAAOC,QAAPD,SAKEA,QACA,eACAE,SAAQC,EAAAC,GAKJ,MAPJJ,QAAOI,MAAQA,EAKbC,QAAAA,eAAiBC,YAAjBD,gBAAiB,SAAUE,GAKzB,GAAIC,GAAJD,EAAAA,EAAAE,MAAA,KAAA,GAAAT,OAAAU,SAAAC,OAAAC,MAAA,GAGIC,IAAJ,IAAIA,EAAa,CAKfA,EAAUA,EAAYJ,MAAtB,KAAA,EAEA,KAAK,GACHK,GAAAD,EAAAJ,MAAA,KADOM,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAAK,CAKnC,GAGEE,GAHEA,EAAAA,EAAJF,GAAAN,MAAA,KACAS,EAAAC,EAAA,GAAAC,QAAA,UAAA,SAAAC,GAKA,MAJEJ,GAAWI,EAAET,MAAM,GAAI,GAIzB,KAIAM,MAAA,KAAsBI,EAAAA,IAAtBH,EAAA,EAGAD,GAAAA,EAAAI,cACAC,EAAQL,EAAYI,cAGhBd,EAAIU,IAEN,gBAAAV,GAAAU,KACAV,EAAIU,IAAAV,EAAoBU,SAGjB,KAAAD,EAELT,EAAAU,GAAAM,KAAAD,GAIFf,EAAAU,GAAAD,GAAAM,GAILf,EAAAU,GAAAK,GAKHE,MAAAA,IAGEA,UAAIC,WACJ,GAAIA,GAAAA,YAxEV,QA0EU,IAAAA,UAAUC,WAAWC,QAAQ,SAAjCC,EAAkDA,YAFL,IAAzCH,UAAUC,WAAWC,QAAQ,SAAeC,EAAS,UAIzD,IAAAH,UAAAC,WAAAC,QAAA,SAAAC,EAAA,SACD,IAAAH,UAAAC,WAAAC,QAAA,WAAAC,EAAA,SA7ELA","file":"../javascripts/common.js","sourcesContent":["'use strict';\nwindow.define([\n  'jquery',\n  'axios',\n  'es6-promise'\n], function ($, axios) {\n  window.axios = axios;\n  // https://github.com/stefanpenner/es6-promise 참고\n  require('es6-promise').polyfill();\n\n  return {\n    getAllUrlParams: function (url) {\n      // get query string from url (optional) or window\n      var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n      // we'll store the parameters here\n      var obj = {};\n\n      // if query string exists\n      if (queryString) {\n        // stuff after # is not part of query string, so get rid of it\n        queryString = queryString.split('#')[0];\n\n        // split our query string into its component parts\n        var arr = queryString.split('&');\n\n        for (var i = 0; i < arr.length; i++) {\n          // separate the keys and the values\n          var a = arr[i].split('=');\n\n          // in case params look like: list[]=thing1&list[]=thing2\n          var paramNum;\n          var paramName = a[0].replace(/\\[\\d*\\]/, function (v) {\n            paramNum = v.slice(1, -1);\n            return '';\n          });\n\n          // set parameter value (use 'true' if empty)\n          var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n\n          // (optional) keep case consistent\n          paramName = paramName.toLowerCase();\n          paramValue = paramValue.toLowerCase();\n\n          // if parameter name already exists\n          if (obj[paramName]) {\n            // convert value to array (if still string)\n            if (typeof obj[paramName] === 'string') {\n              obj[paramName] = [obj[paramName]];\n            }\n            // if no array index number specified...\n            if (typeof paramNum === 'undefined') {\n              // put the value on the end of the array\n              obj[paramName].push(paramValue);\n            } else {\n              // if array index number specified...\n              // put the value at that index number\n              obj[paramName][paramNum] = paramValue;\n            }\n          } else {\n            // if param name doesn't exist yet, set it\n            obj[paramName] = paramValue;\n          }\n        }\n      }\n\n      return obj;\n    },\n\n    getOSName: function () {\n      var OSName = 'Unknown OS';\n\n      if (navigator.appVersion.indexOf('Win') !== -1) OSName = 'Windows';\n      if (navigator.appVersion.indexOf('Mac') !== -1) OSName = 'MacOS';\n      if (navigator.appVersion.indexOf('X11') !== -1) OSName = 'UNIX';\n      if (navigator.appVersion.indexOf('Linux') !== -1) OSName = 'Linux';\n\n      return OSName;\n    }\n  };\n});\n"]}