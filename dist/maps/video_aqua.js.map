{"version":3,"sources":["video_aqua.js"],"names":["window","requirejs","waitMessage","$","Util","Timer","sessionProgressStartLogger","ajax","type","res","console","data","training_user_id","playerContainer","course_id","course_list_id","done","success","btnPlayNext","error","msg","sessionProgressEndLogger","href","showPlayBtn","nextUrl","removeClass","btnReplayVideo","waitingTimeLogger","axios","params","delete","catch","deleteSessionLog","then","response","autoplay","osName","getOSName","parent","attr","timer","options","videoUrl","videoStatus","totalPlayedSeconds","AquaNManagerService","courseId","courseListId","setTimeout","countdown","startValues","getTimeValues","start","seconds","html","toString","e","alert","reload","spread","acct","perms","log","btnPlayVideo","on","stop","startPlayer","click","event","preventDefault"],"mappings":"YAAAA,QAAOC,WAAPD,SAUE,QACA,sBACA,SACA,YACA,eAEA,SAAIE,EAAAA,EAAcC,EAAEC,EAAuBC,GAqEjC,QAAAC,KAHDH,EAAPI,MASEC,KAAKC,OACHC,IAAAA,yBACDC,MAXHC,iBAAAC,EAAAF,KAAA,oBAaDG,UAAAD,EAAAF,KAAA,aAPKI,eAAgBF,EAAgBF,KAAK,qBAEtCK,KAAK,SAAUP,GACXA,EAAIQ,SASbC,QAAAC,MAAeV,EAASW,OAcd,QAAAC,KAHDlB,EAAPI,MASEC,KAAKC,OACHC,IAAAA,uBACDC,MACCX,iBAAgBsB,EAAhBX,KAAA,oBACDG,UAAAD,EAAAF,KAAA,aAbHI,eAAAF,EAAAF,KAAA,qBAQGK,KAAK,SAAUP,GASpBA,EAAAQ,QAGAjB,OAASuB,SAATD,KAAwBE,EAVlBd,QAAQS,MAAMV,EAAIW,OAUxB,QAASG,KACgC,SAAnCV,EAAgBF,KAAK,YACvBO,EAAYO,YAAY,SAS5BC,EAASC,SAAT,UA4CE,QAAOC,KACLC,MAAAA,GAAQC,OAAA,cACNlB,QACAG,SAAAA,EAAgBF,KAAAA,SAMlBH,KAAAA,SAAcS,MAEjBY,MAAA,SAAAZ,GArMHT,QAAAS,MAAAA,KAyLE,QAASa,KACP,MAAOJ,GAAME,OAAO,gBAClBD,QACEjB,iBAAkBC,EAAgBF,KAAK,oBACvCI,eAAgBF,EAAgBF,KAAK,qBAGxCsB,KAAK,SAAUC,MAEfH,MAAM,SAAUZ,GACfT,QAAQS,MAAMA,KAjLlB,GAAIgB,GAAWtB,EAAAA,gBACXuB,EAAcC,EAAAA,mBANdnB,EAAcf,EAAE,kBAQpBqB,EAAAN,EAAAoB,SAAAC,KAAA,QACAb,EAAAvB,EAAA,qBANID,EAAcC,EAAE,sBAQlBqC,EAAA,GAAYnC,GACZ8B,EAAIM,EAAU9B,KAAA,YACZ+B,EAAAA,EAAU7B,WAKV8B,GAAAA,WACAC,GAAAA,IAPFF,SAAA7B,EAAAF,KAAA,OASAkC,eAAAA,EAA0BA,KAAAA,oBANxBC,SAAUjC,EAAgBF,KAAK,aAQjCoC,aAAIlC,EAAqBF,KAArB,kBACFR,QAAEU,EAAsBF,KAAA,MANxBgC,YAAa9B,EAAgBF,KAAK,UAQlCqC,mBAAWnC,EAAYF,KAAA,cAErB6B,GAAaS,GAAAA,GAAiBC,GAEPC,KAAvBjD,EAAAS,KAAiB6B,aANnBrC,EAAE,UAAUsB,YAAY,SASpBvB,WAAAA,WALFsC,EAAMY,OAAOH,WAAW,EAAMC,aAAcG,QAAS,MASnDnD,EAAAA,KAAYoD,EAAKH,gBAAjBI,WAAA,+BAEAP,EAAAA,iBAAW,iBAAY,SAAAQ,GACrBxD,EAAOyD,KAAMjB,EAAAW,gBAAAI,WAAA,iCAIXvD,EAAAA,iBAAgB0D,iBAAhB,SAAAF,GACDtD,EAHDoD,KAAA,iBANJN,WAAA,WAYChD,OAtBHyD,MAAA,yDAwBFlC,EAAAA,KAAAA,IAAAA,MAPSU,KAAKL,EAAM+B,OAAO,SAAUC,EAAMC,GASnCC,OAAI1B,SAAZsB,aAEAK,QAEEzD,MAEDiB,IAEDb,QAAIyB,IAAJC,GAEC2B,EAAAC,GAAA,QAAA,WAnDHxB,EAAAyB,OA6CI3D,IASJuC,EAAAqB,gBAGA/B,GACI5B,EAAK4D,UAkBTjD,EAAY8C,GAAG,QAAS,SAAUI,GAChCA,EAAMC,iBASR7B,EAAAyB,OAEIzD","file":"../javascripts/video_aqua.js","sourcesContent":["window.requirejs(\n  [\n    'jquery',\n    'axios',\n    'aquaNManagerService',\n    'common',\n    'easyTimer',\n    'jqueryTimer'\n  ],\nfunction ($, axios, AquaNManagerService, Util, Timer) {\n  // element cache1\n  var playerContainer = $('.videoplayer');\n  var btnPlayVideo = $('#btn_play_video');\n  var btnPlayNext = $('#btn_play_next');\n  var nextUrl = btnPlayNext.parent().attr('href');\n  var btnReplayVideo = $('#btn_replay_video');\n  var waitMessage = $('#countdown .values'); // $('.wait-message');\n  var timer = new Timer();\n  var autoplay = playerContainer.data('autoplay'); // 보안플레이어 자동 실행\n  var osName = Util.getOSName();\n\n  // var timerWait = null; // 비디오 시청 종료 후 다음 버튼을 누르도록 강요하는 타이머\n  // var timerWaitingSeconds = playerContainer.data('wait-seconds'); // 다음버튼을 노출하는데 까지 대기하는 시간\n\n  $(function () {\n    var options = {\n      videoUrl: playerContainer.data('url'),\n      trainingUserId: playerContainer.data('training-user-id'),\n      courseId: playerContainer.data('course-id'),\n      courseListId: playerContainer.data('course-list-id'),\n      videoId: playerContainer.data('id'),\n      videoStatus: playerContainer.data('status'),\n      totalPlayedSeconds: playerContainer.data('total-play')\n    };\n    AquaNManagerService = new AquaNManagerService(options);\n\n    if (playerContainer.data('confirm') == '1') {\n      $('.timer').removeClass('blind');\n\n      setTimeout(function () {\n        // timerWait = $.timer(1000 * 1, waitingTimeLogger, true);\n        timer.start({countdown: true, startValues: {seconds: 30}});\n\n        waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n\n        timer.addEventListener('secondsUpdated', function (e) {\n          waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n        });\n\n        timer.addEventListener('targetAchieved', function (e) {\n          waitMessage.html('학습 초기화 중입니다..');\n\n          setTimeout(function () {\n            window.alert('30초 동안 다음 버튼을 누르지 않아 학습을 초기화 하였습니다.\\n\\n재시청 해주시기 바랍니다.');\n\n            axios.all([ deleteVideoLog(), deleteSessionLog() ])\n            .then(axios.spread(function (acct, perms) {\n              window.location.reload();\n            }));\n          }, 3000);\n        });\n      }, 1000);\n    }\n    showPlayBtn();\n\n    console.log(osName);\n\n    btnPlayVideo.on('click', function () {\n      timer.stop();\n      sessionProgressStartLogger();\n      AquaNManagerService.startPlayer();\n    });\n\n    if (autoplay) {\n      btnPlayVideo.click();\n    }\n  });\n\n  /**\n   * 세션 시작일시 로깅\n   */\n  function sessionProgressStartLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/starttime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      }\n    });\n  }\n\n  /**\n  * 다음버튼 클릭 시 발생 이벤트\n  */\n  btnPlayNext.on('click', function (event) {\n    event.preventDefault();\n    timer.stop();\n    // 세션 종료로그를 기록한다.\n    sessionProgressEndLogger();\n  });\n\n  /**\n   * 세션 종료일시 로깅\n   */\n  function sessionProgressEndLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/endtime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n        window.location.href = nextUrl;\n      }\n    });\n  }\n\n  /**\n   * 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n   */\n  function showPlayBtn () {\n    if (playerContainer.data('status') === 'done') {\n      btnPlayNext.removeClass('blind');\n      btnReplayVideo.addClass('blind');\n    }\n  }\n\n  /**\n   * 정해진 시간 내에 다음 버튼을 누르지 않을 경우\n   * 학습을 초기화 하는 타이머 컨트롤러\n   */\n  function waitingTimeLogger () {\n    waitMessage.html(' ( ' + timerWaitingSeconds + ' 초 이내 클릭 )');\n\n    // 세션과 비디오 로그를 삭제한다.\n    if (timerWaitingSeconds <= 0) {\n      timerWait.stop();\n      window.alert('비디오를 재시청 해주시기 바랍니다.');\n\n      axios.all([ deleteVideoLog(), deleteSessionLog() ])\n        .then(axios.spread(function (acct, perms) {\n          console.log(acct);\n          // if (acct.data.success) {\n          var redirectUrl = '/session' +\n              '/' + playerContainer.data('training-user-id') +\n              '/' + playerContainer.data('course-id') +\n              '/' + playerContainer.data('course-list-id');\n\n          console.log(redirectUrl);\n          window.location.href = redirectUrl;\n          // }\n        }));\n    }\n\n    timerWaitingSeconds -= 1;\n  }\n\n  /**\n   * 세션 비디오 로그를 삭제한다.\n   */\n  function deleteVideoLog () {\n    return axios.delete('/video/log', {\n      params: {\n        video_id: playerContainer.data('id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 세션 로그를 삭제한다.\n  function deleteSessionLog () {\n    return axios.delete('/session/log', {\n      params: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n});\n"]}