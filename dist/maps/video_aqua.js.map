{"version":3,"sources":["video_aqua.js"],"names":["window","requirejs","btnReplayVideo","Timer","course_list_id","$","ajax","type","url","res","console","training_user_id","playerContainer","data","course_id","done","success","error","msg","location","nextUrl","href","showPlayBtn","btnPlayNext","removeClass","addClass","deleteSessionLog","axios","delete","params","then","response","catch","timer","autoplay","parent","attr","waitMessage","options","videoId","videoStatus","totalPlayedSeconds","trainingUserId","AquaNManagerService","courseListId","addEventListener","start","countdown","startValues","seconds","getTimeValues","toString","e","setTimeout","html","deleteVideoLog","alert","all","reload","stop","btnPlayVideo","click","sessionProgressStartLogger","startPlayer","on","event","preventDefault"],"mappings":"YAAAA,QAAOC,WAAPD,SASE,QACA,sBACA,YACA,eAEA,SAAIE,EAAAA,EAAAA,EAAmBC,GAsEjBC,QAAAA,KAHIC,EAAAC,MAHRC,KAQQ,OACNC,IAAKC,yBACHC,MACDC,iBAAAC,EAAAC,KAAA,oBAXHC,UAAAF,EAAAC,KAAA,aAaDT,eAAAQ,EAAAC,KAAA,qBAEDE,KAAA,SAAAN,GANSA,EAAIO,SACPN,QAAQO,MAAMR,EAAIS,OAyBlBd,QAAAA,KAHIC,EAAAC,MAHRC,KAQQ,OACNC,IAAKC,uBACHC,MADFC,iBAEOC,EAAAC,KAAA,oBACLb,UAAOmB,EAAgBC,KAAvB,aACDhB,eAAAQ,EAAAC,KAAA,qBAEJE,KAAA,SAAAN,GANQA,EAAIO,QAGPhB,OAAOmB,SAASE,KAAOD,EAK7BV,QAAAO,MAAAR,EAAAS,OAUA,QAAAI,KANyC,SAAnCV,EAAgBC,KAAK,YACvBU,EAAYC,YAAY,SACxBtB,EAAeuB,SAAS,UAmD5B,QAASC,KACP,MAAOC,GAAMC,OAAO,cAClBC,QACElB,SAAAA,EAAkBC,KAAAA,SAFfkB,KAMNA,SAAKC,MANCC,MAAP,SAAAf,GAWDP,QAAAO,MAAAA,KAZD,QAASS,KACP,MAAOC,GAAMC,OAAO,gBAClBC,QACElB,iBAAkBC,EAAgBC,KAAK,oBACvCT,eAAgBQ,EAAgBC,KAAK,qBAGxCiB,KAAK,SAAUC,MAEfC,MAAM,SAAUf,GACfP,QAAQO,MAAMA,KA/KlB,GAAIgB,GAAQ5B,EAAZ,gBACI6B,EAAWtB,EAAAA,mBALXW,EAAclB,EAAE,kBAOpBe,EAAAG,EAAAY,SAAAC,KAAA,QACAlC,EAAAG,EAAA,qBALIgC,EAAchC,EAAE,sBAOlB4B,EAAA,GAAY9B,GACZ+B,EAAII,EAAUzB,KAAA,WAKZ0B,GAAAA,WACAC,GAAAA,IACAC,SAAAA,EAAoB7B,KAAAA,OAPtB8B,eAAA9B,EAAAC,KAAA,oBASA8B,SAAAA,EAA0BA,KAAAA,aALxBC,aAAchC,EAAgBC,KAAK,kBAOrC0B,QAAI3B,EAAqBC,KAAA,MACvBR,YAAYmB,EAAYX,KAAxB,UALA4B,mBAAoB7B,EAAgBC,KAAK,cAQvC8B,GAAA,GAAAA,GAAAL,GAJmC,KAAnC1B,EAAgBC,KAAK,aAOrBwB,EAAAA,UAAAA,YAAiBJ,SAEjBA,WAAMY,WAELZ,EAFDa,OAAAC,WAAA,EAAAC,aAAAC,QAAA,MAIAhB,EAAMY,KAAAA,EAAiBK,gBAAvBC,WAAyC,+BAJzClB,EAAMY,iBAAiB,iBAAkB,SAAUO,GAOjDC,EAAWC,KAAArB,EAAYiB,gBAAAC,WAAA,iCAGrBxB,EAAAA,iBAAY4B,iBAAkB7B,SAApB0B,GAERpD,EAAOmB,KAAAA,iBAEVkC,WAPD,WAHFrD,OAAAwD,MAAA,yDAaH7B,EAAA8B,KAAAF,IAAA7B,MACDJ,KAAAA,EAAAA,OAAAA,SAAAA,EAAAA,GANUtB,OAAOmB,SAASuC,aASlBC,QAENhB,MALFrB,IASEsC,EAAAA,GAAaC,QAAb,WACD5B,EAAA0B,OAjDHG,IA4CInB,EAAoBoB,gBAGlB7B,GAQN0B,EAASE,UA0BTvC,EAAAyC,GAAA,QAAA,SAAAC,GANEA,EAAMC,iBACNjC,EAAM0B,OASNtD","file":"../javascripts/video_aqua.js","sourcesContent":["window.requirejs(\n  [\n    'jquery',\n    'axios',\n    'aquaNManagerService',\n    'easyTimer',\n    'jqueryTimer'\n  ],\nfunction ($, axios, AquaNManagerService, Timer) {\n  // element cache\n  var playerContainer = $('.videoplayer');\n  var btnPlayVideo = $('#btn_play_video');\n  var btnPlayNext = $('#btn_play_next');\n  var nextUrl = btnPlayNext.parent().attr('href');\n  var btnReplayVideo = $('#btn_replay_video');\n  var waitMessage = $('#countdown .values'); // $('.wait-message');\n  var timer = new Timer();\n  var autoplay = playerContainer.data('autoplay'); // 보안플레이어 자동 실행\n\n  // var timerWait = null; // 비디오 시청 종료 후 다음 버튼을 누르도록 강요하는 타이머\n  // var timerWaitingSeconds = playerContainer.data('wait-seconds'); // 다음버튼을 노출하는데 까지 대기하는 시간\n\n  $(function () {\n    var options = {\n      videoUrl: playerContainer.data('url'),\n      trainingUserId: playerContainer.data('training-user-id'),\n      courseId: playerContainer.data('course-id'),\n      courseListId: playerContainer.data('course-list-id'),\n      videoId: playerContainer.data('id'),\n      videoStatus: playerContainer.data('status'),\n      totalPlayedSeconds: playerContainer.data('total-play')\n    };\n    AquaNManagerService = new AquaNManagerService(options);\n\n    if (playerContainer.data('confirm') == '1') {\n      $('.timer').removeClass('blind');\n\n      setTimeout(function () {\n        // timerWait = $.timer(1000 * 1, waitingTimeLogger, true);\n        timer.start({countdown: true, startValues: {seconds: 30}});\n\n        waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n\n        timer.addEventListener('secondsUpdated', function (e) {\n          waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n        });\n\n        timer.addEventListener('targetAchieved', function (e) {\n          waitMessage.html('학습 초기화 중입니다..');\n\n          setTimeout(function () {\n            window.alert('30초 동안 다음 버튼을 누르지 않아 학습을 초기화 하였습니다.\\n\\n재시청 해주시기 바랍니다.');\n\n            axios.all([ deleteVideoLog(), deleteSessionLog() ])\n            .then(axios.spread(function (acct, perms) {\n              window.location.reload();\n            }));\n          }, 3000);\n        });\n      }, 1000);\n    }\n    showPlayBtn();\n\n    btnPlayVideo.on('click', function () {\n      timer.stop();\n      sessionProgressStartLogger();\n      AquaNManagerService.startPlayer();\n    });\n\n    if (autoplay) {\n      btnPlayVideo.click();\n    }\n  });\n\n  /**\n   * 세션 시작일시 로깅\n   */\n  function sessionProgressStartLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/starttime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      }\n    });\n  }\n\n  /**\n  * 다음버튼 클릭 시 발생 이벤트\n  */\n  btnPlayNext.on('click', function (event) {\n    event.preventDefault();\n    timer.stop();\n    // 세션 종료로그를 기록한다.\n    sessionProgressEndLogger();\n  });\n\n  /**\n   * 세션 종료일시 로깅\n   */\n  function sessionProgressEndLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/endtime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n        window.location.href = nextUrl;\n      }\n    });\n  }\n\n  /**\n   * 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n   */\n  function showPlayBtn () {\n    if (playerContainer.data('status') === 'done') {\n      btnPlayNext.removeClass('blind');\n      btnReplayVideo.addClass('blind');\n    }\n  }\n\n  /**\n   * 정해진 시간 내에 다음 버튼을 누르지 않을 경우\n   * 학습을 초기화 하는 타이머 컨트롤러\n   */\n  function waitingTimeLogger () {\n    waitMessage.html(' ( ' + timerWaitingSeconds + ' 초 이내 클릭 )');\n\n    // 세션과 비디오 로그를 삭제한다.\n    if (timerWaitingSeconds <= 0) {\n      timerWait.stop();\n      window.alert('비디오를 재시청 해주시기 바랍니다.');\n\n      axios.all([ deleteVideoLog(), deleteSessionLog() ])\n        .then(axios.spread(function (acct, perms) {\n          console.log(acct);\n          // if (acct.data.success) {\n          var redirectUrl = '/session' +\n              '/' + playerContainer.data('training-user-id') +\n              '/' + playerContainer.data('course-id') +\n              '/' + playerContainer.data('course-list-id');\n\n          console.log(redirectUrl);\n          window.location.href = redirectUrl;\n          // }\n        }));\n    }\n\n    timerWaitingSeconds -= 1;\n  }\n\n  /**\n   * 세션 비디오 로그를 삭제한다.\n   */\n  function deleteVideoLog () {\n    return axios.delete('/video/log', {\n      params: {\n        video_id: playerContainer.data('id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 세션 로그를 삭제한다.\n  function deleteSessionLog () {\n    return axios.delete('/session/log', {\n      params: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n});\n"]}